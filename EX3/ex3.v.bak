module ex3 (
    input wire clk,         // External clock input
    input wire reset,       // Asynchronous reset input
    input wire [1:0] div,   // 2-bit wide synchronous DIV input
    output wire div_clk     // Output divided clock
);

reg [23:0] counter;         // 24-bit counter to divide the clock
reg div_clk_reg;            // Register to store the divided clock output

always @(posedge clk or posedge reset) begin
    if (reset) begin
        counter <= 0;       // Reset counter on asynchronous reset
        div_clk_reg <= 0;   // Reset output on asynchronous reset
    end else begin
        if (counter == 0) begin
            case(div)
                2'b00: counter <= 499_999;  // 100 Hz
                2'b01: counter <= 49_999;   // 1 kHz
                2'b10: counter <= 4_999;    // 10 kHz
                2'b11: counter <= 499;      // 100 kHz
                default: counter <= 0;
            endcase
            div_clk_reg <= ~div_clk_reg;  
        end else begin
            counter <= counter - 1;       // Decrement counter
        end
    end
end

assign div_clk = div_clk_reg; 

endmodule
